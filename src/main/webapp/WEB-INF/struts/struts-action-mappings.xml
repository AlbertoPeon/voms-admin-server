<?xml version="1.0" encoding="ISO-8859-1" ?>


<!DOCTYPE struts-config PUBLIC
          "-//Apache Software Foundation//DTD Struts Configuration 1.2//EN"
          "http://jakarta.apache.org/struts/dtds/struts-config_1_2.dtd">

  <!--
    Copyright (c) Members of the EGEE Collaboration. 2006. See
    http://www.eu-egee.org/partners/ for details on the copyright holders.

    Licensed under the Apache License, Version 2.0 (the "License"); you may not
    use this file except in compliance with the License. You may obtain a copy
    of the License at http://www.apache.org/licenses/LICENSE-2.0 Unless
    required by applicable law or agreed to in writing, software distributed
    under the License is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR
    CONDITIONS OF ANY KIND, either express or implied. See the License for the
    specific language governing permissions and limitations under the License.

    Authors: Andrea Ceccanti - andrea.ceccanti@cnaf.infn.it
  -->

<struts-config>

  <action-mappings>

    <!--  ####################### -->
    <!--      TILES FORWARDS      -->
    <!--  ####################### -->
    <action
      path="/GeneralErrorPage"
      forward=".general.error.page" />
    <action
      path="/Welcome"
      forward=".welcome.page" />
    <action
      path="/Admin"
      forward=".admin.page" />
    <action
      path="/ManageMembership"
      forward=".manage.membership.page" />
    <action
      path="/ManageNotification"
      forward=".manage.notification.page" />
    <action
      path="/ManageUsers"
      forward=".manage.users.page" />
    <action
      path="/ManageRoles"
      forward=".manage.roles.page" />

    <action
      path="/ManageCertificate"
      forward=".manage.certificate.page" />
    <action
      path="/AddCertificate"
      forward=".add.certificate.page" />

    <action
      path="/Help"
      forward=".help.page" />
    <action
      path="/RegistrationDisabled"
      forward=".registration.disabled.page" />

    <action
      path="/ManageRequests"
      forward="/PendingRequests.do" />

    <action
      path="/PreCreateRole"
      forward=".create.role.page" />

    <action
      path="/Test"
      forward=".test.page" />

    <action
      path="/UserHome"
      forward=".user.home.page" />
    <action
      path="/Limbo"
      forward=".registration.limbo.page" />

    <action
      path="/ManageConfiguration"
      type="org.glite.security.voms.admin.actions.PrintConfigurationAction">
      <forward
        name="next"
        path=".manage.configuration.page" />
    </action>

    <!--  ####################### -->
    <!--   REGISTRATION ACTIONS   -->
    <!--  ####################### -->
    <action
      path="/StartRegistration"
      type="org.glite.security.voms.admin.actions.requests.StartRegistrationAction">

      <forward
        name="success"
        path=".register.user.page" />
    </action>

    <action
      path="/SubmitVOMembershipRequest"
      type="org.glite.security.voms.admin.actions.requests.SubmitRequestAction"
      name="SubmitRequestForm"
      validate="true"
      input=".register.user.page">
      <forward
        name="success"
        path=".confirm.user.page" />
    </action>

    <action
      path="/ConfirmVOMembershipRequest"
      type="org.glite.security.voms.admin.actions.requests.ConfirmRequestAction"
      name="ConfirmRequestForm">
      <forward
        name="success"
        path=".submission.confirmed.page" />
    </action>

    <action
      path="/CancelVOMembershipRequest"
      type="org.glite.security.voms.admin.actions.requests.CancelRequestAction"
      name="ConfirmRequestForm">
      <forward
        name="success"
        path=".submission.cancelled.page" />
    </action>

    <action
      path="/PendingRequests"
      type="org.glite.security.voms.admin.actions.requests.ListPendingRequestsAction">

      <forward
        name="success"
        path=".pending.requests.page" />
    </action>

    <action
      path="/ProcessedRequests"
      type="org.glite.security.voms.admin.actions.requests.ListProcessedRequestsAction">

      <forward
        name="success"
        path=".processed.requests.page" />
    </action>

    <action
      path="/VOMembership"
      type="org.glite.security.voms.admin.actions.requests.VOMembershipAction"
      parameter="method"
      name="VOMembershipForm"
      validate="false"
      input=".pending.requests.page">
      <forward
        name="success"
        path="/PendingRequests.do" />
    </action>

    <action
      path="/LoadVOMembershipRequest"
      type="org.glite.security.voms.admin.actions.requests.LoadVOMembershipRequestAction"
      name="VOMembershipForm"
      validate="false"
      input=".pending.requests.page">

      <forward
        name="success"
        path=".request.detail.page" />
    </action>


    <!--  ####################### -->
    <!--     LOGIN ACTIONS     -->
    <!--  ####################### -->
    <action
      path="/Login"
      type="org.glite.security.voms.admin.actions.LoginAction">
    </action>


    <!--  ####################### -->
    <!--     SIBLINGS ACTIONS     -->
    <!--  ####################### -->
    <action
      path="/Siblings"
      type="org.glite.security.voms.admin.actions.siblings.LoadConfiguredVOsAction">

      <forward
        name="success"
        path=".siblings" />
    </action>


    <!--  ####################### -->
    <!--      USER ACTIONS        -->
    <!--  ####################### -->
    <action
      path="/PreCreateUser"
      type="org.glite.security.voms.admin.actions.user.PreCreateUserAction">
      <forward
        name="success"
        path=".create.user.page" />
    </action>

    <action
      path="/CreateUser"
      type="org.glite.security.voms.admin.actions.user.CreateUserAction"
      name="UserForm"
      validate="false"
      input="/PreCreateUser.do">

      <exception
        key=""
        type="org.glite.security.voms.admin.common.VOMSException"
        handler="org.glite.security.voms.admin.handlers.UserActionsExceptionHandler"
        path="/PreCreateUser.do" />

      <forward
        name="success"
        path="/SearchUser.do" />

    </action>

    <action
      path="/ConfirmDeleteUser"
      type="org.glite.security.voms.admin.actions.user.ConfirmDeleteUserAction"
      name="UserForm"
      validate="false">

      <exception
        key=""
        type="org.glite.security.voms.admin.common.VOMSException"
        handler="org.glite.security.voms.admin.handlers.UserActionsExceptionHandler"
        path=".user.error.page" />

      <forward
        name="success"
        path=".delete.user.confirm.page" />
    </action>

    <action
      path="/DeleteUser"
      type="org.glite.security.voms.admin.actions.user.DeleteUserAction"
      name="UserForm"
      validate="false">

      <exception
        key=""
        type="org.glite.security.voms.admin.common.VOMSException"
        handler="org.glite.security.voms.admin.handlers.UserActionsExceptionHandler"
        path="/SearchUser.do" />

      <forward
        name="success"
        path="/SearchUser.do" />
    </action>

    <action
      path="/PreEditUser"
      type="org.glite.security.voms.admin.actions.user.PreEditUserAction"
      name="UserForm"
      validate="false">
      <forward
        name="success"
        path=".edit.user.page" />
    </action>

    <action
      path="/EditUser"
      type="org.glite.security.voms.admin.actions.user.EditUserAction"
      name="UserForm"
      validate="true"
      input="/PreEditUser.do">

      <exception
        key=""
        type="org.glite.security.voms.admin.common.VOMSException"
        handler="org.glite.security.voms.admin.handlers.UserActionsExceptionHandler" />

      <forward
        name="success"
        path="/PreEditUser.do" />
    </action>

    <action
      path="/SearchUser"
      type="org.glite.security.voms.admin.actions.user.SearchUserAction"
      name="SearchForm"
      validate="true"
      input=".search.users.page">

      <exception
        key=""
        type="org.glite.security.voms.admin.common.VOMSException"
        handler="org.glite.security.voms.admin.handlers.UserActionsExceptionHandler" />

      <forward
        name="success"
        path=".search.users.page" />
    </action>


    <action
      path="/Member"
      type="org.glite.security.voms.admin.actions.user.MembershipActions"
      name="MembershipForm"
      parameter="method"
      validate="false"
      input=".edit.user.page">

      <exception
        key=""
        type="org.glite.security.voms.admin.common.VOMSException"
        handler="org.glite.security.voms.admin.handlers.UserActionsExceptionHandler"
        path="/PreEditUser.do" />

      <forward
        name="success"
        path="/PreEditUser.do" />
    </action>

    <action
      path="/UserAttributes"
      type="org.glite.security.voms.admin.actions.user.UserAttributesActions"
      name="UserAttributesForm"
      parameter="method"
      validate="true"
      input="/PreEditUser.do">

      <exception
        key=""
        type="org.glite.security.voms.admin.common.VOMSException"
        handler="org.glite.security.voms.admin.handlers.UserActionsExceptionHandler"
        path="/PreEditUser.do" />

      <forward
        name="success"
        path="/PreEditUser.do" />
    </action>

    <!--  ####################### -->
    <!--      GROUP ACTIONS        -->
    <!--  ####################### -->
    <action
      path="/CreateGroup"
      type="org.glite.security.voms.admin.actions.group.GroupActions"
      name="GroupForm"
      parameter="method"
      validate="true"
      input="/PreCreateGroup.do">

      <exception
        key="error.group.not_found"
        type="org.glite.security.voms.admin.database.NoSuchGroupException"
        path="/SearchGroups.do" />

      <exception
        key="error.group.already_exists"
        type="org.glite.security.voms.admin.database.AlreadyExistsException"
        path="/PreCreateGroup.do" />

      <exception
        key="error.generic"
        type="org.glite.security.voms.admin.common.VOMSException"
        path="/SearchGroups.do" />

      <exception
        key="error.not_found"
        type="org.hibernate.ObjectNotFoundException"
        path="/SearchGroups.do" />

      <forward
        name="success"
        path="/SearchGroups.do" />
    </action>

    <action
      path="/Group"
      type="org.glite.security.voms.admin.actions.group.GroupActions"
      name="GroupForm"
      parameter="method"
      validate="false">

      <exception
        key="error.group.not_found"
        type="org.glite.security.voms.admin.database.NoSuchGroupException"
        path="/SearchGroups.do" />

      <exception
        key="error.group.already_exists"
        type="org.glite.security.voms.admin.database.AlreadyExistsException"
        path="/PreCreateGroup.do" />

      <exception
        key="error.generic"
        type="org.glite.security.voms.admin.common.VOMSException"
        path="/SearchGroups.do" />

      <exception
        key="error.not_found"
        type="org.hibernate.ObjectNotFoundException"
        path="/SearchGroups.do" />

      <forward
        name="success"
        path="/SearchGroups.do" />
    </action>

    <action
      path="/GroupAttributes"
      type="org.glite.security.voms.admin.actions.group.GroupAttributesActions"
      name="GroupAttributesForm"
      parameter="method"
      validate="true"
      input="/LoadGroup.do">

      <forward
        name="success"
        path="/LoadGroup.do" />

    </action>

    <action
      path="/PreCreateGroup"
      type="org.glite.security.voms.admin.actions.group.SearchGroupsAction"
      name="SearchForm"
      validate="false"
      input=".edit.group.page">

      <forward
        name="success"
        path=".create.group.page" />
    </action>

    <action
      path="/SearchGroups"
      type="org.glite.security.voms.admin.actions.group.SearchGroupsAction"
      name="SearchForm"
      validate="true"
      input="/Login.do">

      <forward
        name="success"
        path=".search.groups.page" />
    </action>

    <action
      path="/LoadGroup"
      type="org.glite.security.voms.admin.actions.group.LoadGroupAction"
      name="GroupForm"
      validate="false">


      <forward
        name="success"
        path=".edit.group.page" />
    </action>

    <action
      path="/GroupMember"
      type="org.glite.security.voms.admin.actions.user.MembershipActions"
      name="MembershipForm"
      parameter="method"
      validate="false">

      <exception
        key=""
        type="org.glite.security.voms.admin.common.VOMSException"
        handler="org.glite.security.voms.admin.handlers.UserActionsExceptionHandler"
        path="/LoadGroup.do" />

      <forward
        name="success"
        path="/LoadGroup.do" />
    </action>

    <action
      path="/SearchMembers"
      type="org.glite.security.voms.admin.actions.group.SearchMembersAction"
      name="MembershipSearchForm"
      validate="true"
      input="/LoadGroup.do">

      <forward
        name="success"
        path="/LoadGroup.do" />
    </action>

    <!--  ####################### -->
    <!--      ROLE ACTIONS        -->
    <!--  ####################### -->
    <action
      path="/CreateRole"
      type="org.glite.security.voms.admin.actions.role.RoleActions"
      name="RoleForm"
      parameter="method"
      validate="true"
      input="/SearchRoles.do">

      <exception
        key="error.not_found"
        type="org.hibernate.ObjectNotFoundException"
        path="/SearchRoles.do" />

      <exception
        key="error.role.already_exists"
        type="org.glite.security.voms.admin.database.AlreadyExistsException"
        path="/PreCreateRole.do" />

      <forward
        name="success"
        path="/SearchRoles.do" />
      <forward
        name="toEditPage"
        path="/LoadRole.do" />
    </action>

    <action
      path="/Role"
      type="org.glite.security.voms.admin.actions.role.RoleActions"
      name="RoleForm"
      parameter="method"
      validate="false">

      <exception
        key="error.not_found"
        type="org.hibernate.ObjectNotFoundException"
        path="/SearchRoles.do" />

      <exception
        key="error.role.already_exists"
        type="org.glite.security.voms.admin.database.AlreadyExistsException"
        path="/PreCreateRole.do" />

      <forward
        name="success"
        path="/SearchRoles.do" />
      <forward
        name="toEditPage"
        path="/LoadRole.do" />
    </action>

    <action
      path="/SearchRoles"
      type="org.glite.security.voms.admin.actions.role.SearchRolesAction"
      name="SearchForm"
      validate="true"
      input="/Login.do">

      <forward
        name="success"
        path=".search.roles.page" />
    </action>

    <action
      path="/RoleMember"
      type="org.glite.security.voms.admin.actions.user.MembershipActions"
      name="MembershipForm"
      parameter="method"
      validate="false">

      <exception
        key=""
        type="org.glite.security.voms.admin.common.VOMSException"
        handler="org.glite.security.voms.admin.handlers.UserActionsExceptionHandler"
        path="/LoadRole.do" />

      <forward
        name="success"
        path="/LoadRole.do" />
    </action>

    <action
      path="/LoadRole"
      type="org.glite.security.voms.admin.actions.role.LoadRoleAction"
      name="RoleForm"
      validate="false">

      <forward
        name="success"
        path=".edit.role.page" />
    </action>

    <action
      path="/SearchRoleMembers"
      type="org.glite.security.voms.admin.actions.group.SearchMembersAction"
      name="MembershipSearchForm"
      validate="true"
      input="/LoadRole.do">

      <forward
        name="success"
        path="/LoadRole.do" />
    </action>

    <action
      path="/RoleAttributes"
      type="org.glite.security.voms.admin.actions.role.RoleAttributesActions"
      name="RoleAttributesForm"
      parameter="method"
      validate="false">

      <forward
        name="success"
        path="/LoadRole.do" />
    </action>

    <!--  ####################### -->
    <!--      ACL ACTIONS        -->
    <!--  ####################### -->

    <action
      path="/ACL"
      type="org.glite.security.voms.admin.actions.acl.ACLActions"
      name="ACLForm"
      parameter="method"
      validate="false">

      <exception
        key="error.authorization_failed"
        type="org.glite.security.voms.admin.common.VOMSAuthorizationException"
        path="/LoadGroup.do" />

      <forward
        name="success"
        path="/LoadGroup.do" />
      <forward
        name="editACL"
        path=".edit.acl.page" />
      <forward
        name="deleteACL"
        path=".delete.acl.page" />
    </action>


    <action
      path="/PreAddACLEntry"
      type="org.glite.security.voms.admin.actions.acl.ACLActions"
      name="AddACLEntryForm"
      parameter="method"
      validate="false">
      <forward
        name="success"
        path=".add.acl.entry.page" />
    </action>

    <action
      path="/AddACLEntry"
      type="org.glite.security.voms.admin.actions.acl.ACLActions"
      name="AddACLEntryForm"
      parameter="method"
      validate="true"
      input="/PreAddACLEntry.do?method=preAddEntry">
      <forward
        name="success"
        path="/LoadGroup.do" />
      <forward
        name="failure"
        path="/PreAddACLEntry.do?method=preAddEntry" />
    </action>


    <!--  ####################### -->
    <!--    ATTRIBUTES ACTIONS    -->
    <!--  ####################### -->

    <action
      path="/ListAttributes"
      type="org.glite.security.voms.admin.actions.attributes.ListAttributesAction">

      <forward
        name="success"
        path=".list.attributes.page" />
    </action>

    <action
      path="/LoadAttributeDescriptions"
      type="org.glite.security.voms.admin.actions.attributes.LoadAttributeDescriptions">
      <forward
        name="success"
        path=".manage.attribute.descriptions" />
    </action>


    <action
      path="/CreateAttributeDescription"
      type="org.glite.security.voms.admin.actions.attributes.AttributeDescriptionActions"
      name="AttributeDescriptionForm"
      parameter="method"
      validate="true"
      input=".manage.attribute.descriptions">

      <exception
        key="error.attribute.constraint_violation"
        type="org.hibernate.exception.ConstraintViolationException"
        path="/LoadAttributeDescriptions.do" />

      <exception
        key="error.attribute.already_exists"
        type="org.glite.security.voms.admin.database.AlreadyExistsException"
        path="/LoadAttributeDescriptions.do" />
      <exception
        key="error.attribute.not_found"
        type="org.glite.security.voms.admin.database.NoSuchAttributeException"
        path="/LoadAttributeDescriptions.do" />
      <forward
        name="success"
        path=".manage.attribute.descriptions" />
    </action>

    <action
      path="/AttributeDescription"
      type="org.glite.security.voms.admin.actions.attributes.AttributeDescriptionActions"
      name="AttributeDescriptionForm"
      parameter="method"
      validate="false"
      input=".manage.attribute.descriptions">

      <exception
        key="error.attribute.constraint_violation"
        type="org.hibernate.exception.ConstraintViolationException"
        path="/LoadAttributeDescriptions.do" />

      <exception
        key="error.attribute.already_exists"
        type="org.glite.security.voms.admin.database.AlreadyExistsException"
        path="/LoadAttributeDescriptions.do" />
      <exception
        key="error.attribute.not_found"
        type="org.glite.security.voms.admin.database.NoSuchAttributeException"
        path="/LoadAttributeDescriptions.do" />
      <forward
        name="success"
        path=".manage.attribute.descriptions" />
    </action>

    <action
      path="/SearchUserAttributes"
      type="org.glite.security.voms.admin.actions.attributes.SearchUserAttributesAction"
      name="SearchForm"
      validate="true"
      input=".search.user.attributes.page">

      <forward
        name="success"
        path=".search.user.attributes.page" />
    </action>

    <!--  ####################### -->
    <!--    UI ACTIONS            -->
    <!--  ####################### -->

    <action
      path="/UI"
      type="org.glite.security.voms.admin.actions.UIActions"
      parameter="method"
      name="UIForm"
      validate="true"
      input="/Login.do">

      <forward
        name="success"
        path="/pages/ui/response.jsp" />
    </action>

    <!--  ####################### -->
    <!--    CONFIGURATION ACTIONS            -->
    <!--  ####################### -->

    <action
      path="/Configuration"
      type="org.glite.security.voms.admin.actions.configuration.LoadConfigurationAction">

      <forward
        name="success"
        path=".configuration.page" />
    </action>

    <!--  ####################### -->
    <!--   CERTIFICATE ACTIONS    -->
    <!--  ####################### -->
    <action
      path="/UploadCertificate"
      type="org.glite.security.voms.admin.actions.certificate.CertificateUploadAction"
      name="CertificateUploadForm">

      <forward
        name="success"
        path=".certificate.info" />
    </action>

    <action
      path="/UserCertificates"
      type="org.glite.security.voms.admin.actions.user.UserCertificateActions"
      name="CertificateForm"
      parameter="method"
      validate="true"
      input="/PreEditUser.do">

      <exception
        key=""
        type="org.glite.security.voms.admin.common.VOMSException"
        handler="org.glite.security.voms.admin.handlers.UserActionsExceptionHandler"
        path="/PreEditUser.do" />
      <forward
        name="success"
        path="/PreEditUser.do" />

      <forward
        name="add-certificate"
        path=".add.certificate.page" />
      <forward
        name="manage-certificate"
        path=".manage.certificate.page" />

    </action>

    <!--  ####################### -->
    <!--   CA ACTIONS    -->
    <!--  ####################### -->
    <action
      path="/CA"
      type="org.glite.security.voms.admin.actions.ca.CAActions"
      name="CAForm"
      parameter="method"
      validate="true"
      input="/CA.do">

      <forward
        name="list-cas"
        path=".manage.cas.page" />

    </action>

    <action
      path="/SearchCAs"
      type="org.glite.security.voms.admin.actions.ca.SearchCAsAction"
      name="SearchForm"
      validate="false"
      input=".manage.cas.page">

      <forward
        name="success"
        path=".manage.cas.page" />

    </action>

    <!--  ####################### -->
    <!--   TAG ACTIONS            -->
    <!--  ####################### -->
    <action
      path="/Tags"
      type="org.glite.security.voms.admin.actions.tags.TagActions"
      name="TagForm"
      validate="false"
      input="/Tags.do"
      parameter="method">

      <forward
        name="success"
        path="/LoadTags.do" />
    </action>

    <action
      path="/LoadTags"
      type="org.glite.security.voms.admin.actions.tags.LoadTagsAction"
      name="TagForm"
      validate="false"
      input=".manage.tags.page">
      <forward
        name="success"
        path=".manage.tags.page" />
    </action>

    <action
      path="/CreateTag"
      type="org.glite.security.voms.admin.actions.tags.LoadTagsAction"
      name="TagForm"
      validate="false"
      input="/LoadTags.do">
      <forward
        name="success"
        path=".create.tag.page" />
    </action>

    <action
      path="/LoadAdmins"
      type="org.glite.security.voms.admin.actions.admins.LoadAdminsActions">
      <forward
        name="success"
        path=".manage.admins.page" />
    </action>

    <action
      path="/TagActions"
      type="org.glite.security.voms.admin.actions.admins.AdminTagsActions"
      name="AdminTagForm"
      validate="false"
      input="/LoadAdmins.do"
      parameter="method">

      <forward
        name="success"
        path="/LoadAdmins.do" />
    </action>

  </action-mappings>

</struts-config>